---
# tasks file for second-reboot
- name: get current uptime before second reboot
  shell: cat /proc/uptime | awk -F . '{print $1}'
  register: uptime
  become: yes
  tags: reboot
- name: reboot system second time
  shell: sleep 2 && shutdown -r now "Ansible triggered reboot"
  async: 1
  poll: 0
  ignore_errors: true
  tags: reboot
- name: waiting for server to come back
  wait_for:
   host: "{{ inventory_hostname }}"
   port: 22
   state: started
   delay: 120
   timeout: 360
  delegate_to: 127.0.0.1
  tags: reboot
- name: verify a reboot was actually initiated
  shell: (( `cat /proc/uptime | awk -F . '{print $1}'` < {{ uptime.stdout }} ))
  become: yes
  tags: reboot
# uptime after reboot should be smaller than before reboot
#  local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=120
#  become: yes

